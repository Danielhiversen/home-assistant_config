- alias: "HA started"
  trigger:
      platform: event
      event_type: homeassistant_start
  action:
   - service: homeassistant.turn_on
     entity_id: script.away_48
   - delay: '00:03:01'
   - service: homeassistant.turn_on
     entity_id: automation.start_media_stue

- alias: "Turn off all devices"
  trigger:
    - platform: time
      after: '00:30:00'
    - platform: time
      after: '01:30:00'
    - platform: state
      entity_id: script.timed_movement
      to: 'off'
      for:
        minutes: 1
  condition:
    - condition: state
      entity_id: script.timed_movement
      state: 'off'
      for:
        minutes: 1
    - condition: or
      conditions:
      - condition: state
        entity_id: group.tracker
        state: 'not_home'
      - condition: time
        after: '23:00:00'
        before: '07:00:00'
  action:
    - service: homeassistant.turn_on
      entity_id: script.all_devices_off

- alias: "All devices off"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'group on', 'entity_id': 'switch.main'}
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d00012ac03c
        click_type: single

  condition:
    - condition: template
      value_template: '{% if states.automation.all_devices_off.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.all_devices_off.attributes.last_triggered)) > 20 }}  {% else %}  true {% endif %}'
  action:
  - service: homeassistant.turn_on
    entity_id: script.borte

- alias: "Kjoleskap for varmt"
  trigger:
    platform: state
    entity_id: binary_sensor.hot_kjoleskap
    to: 'on'
    for:
      hours: 4
  action:
    service: notify.pushbullet
    data:
      title: "Kjoleskap for varmt"
      target: "device/daniel_telefon"
      message: " "

- alias: "Vannlekasje kjokken"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'unknown command (0x1cd550)', 'entity_id': 'switch.vann_kjokken'}
  condition:
    - condition: template
      value_template: '{% if states.automation.vannlekasje_kjokken.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.vannlekasje_kjokken.attributes.last_triggered)) > 3600*12 }}  {% else %}true{% endif %}'
  action:
    service: notify.pushbullet
    data:
      title: "Vannlekasje kjokken"
      target: "device/daniel_telefon"
      message: "Vannlekasje kjokken"

- alias: "Leggetid"
  trigger:
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d00013ed144
        click_type: double
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d00013ed144
        click_type: single
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'unknown command (0x545503)', 'entity_id': 'switch.leggetid'}
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'group on', 'entity_id': 'switch.leggetid_stue'}
  condition:
    - condition: template
      value_template: '{% if states.automation.leggetid.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.leggetid.attributes.last_triggered)) > 20 }}  {% else %}  true {% endif %}'
  action:
    - service: script.turn_off
      data: 
         entity_id: script.leggetid
    - delay: '00:00:01'
    - service: script.turn_on
      data:
        entity_id: script.leggetid

- alias: "Leggetid soverom"
  trigger:
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d00013ed144
        click_type: double
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'unknown command (0x545503)', 'entity_id': 'switch.leggetid'}
  condition:
    - condition: template
      value_template: '{% if states.automation.leggetid_soverom.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.leggetid_soverom.attributes.last_triggered)) > 20 }}  {% else %}  true {% endif %}'
  action:
    - service: script.turn_off
      entity_id: script.timed_lys_soverom
    - service: script.turn_off
      entity_id: script.leggetid_soverom
    - service: script.turn_off
      entity_id: script.leggetid_soverom_temp
    - delay: '00:00:01'
    - service: script.turn_on
      entity_id: script.leggetid_soverom

- alias: "Away 48"
  trigger:
    - platform: state
      entity_id: group.tracker
      to: 'not_home'
    - platform: state
      entity_id: script.timed_movement
      state: 'off'
  action:
    - service: script.turn_off
      data: 
         entity_id: script.away_48
    # Set new timer  
    - service: script.turn_on
      data:
         entity_id: script.away_48

- alias: "movement"
  trigger:
    - platform: state
      entity_id: binary_sensor.door, binary_sensor.door_do, binary_sensor.door_soverom, binary_sensor.door_bad, binary_sensor.movement1,  binary_sensor.movement2, binary_sensor.movement3, binary_sensor.movement_do, binary_sensor.motion_sensor_158d00010ab2d0, binary_sensor.movement_kjokken, binary_sensor.movement_stue
      state: 'on'
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'on', 'entity_id': 'switch.door_bedroom'}
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'on', 'entity_id': 'switch.door'}
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'on', 'entity_id': 'switch.movement1'}


  condition:
    - condition: state
      entity_id: script.stovsuger_running
      state: 'off'
      for:
        minutes: 2
  action:
    - service: script.turn_off
      entity_id: script.timed_movement
    - service: script.turn_on
      entity_id: script.timed_movement

- alias: "movement alert"
  trigger:
   - platform: state
     entity_id: script.timed_movement
     state: 'on'
  condition:
   - condition: state
     entity_id: group.tracker
     state: 'not_home'
   - condition: state
     entity_id: script.alert
     state: 'off'
   - condition: template
     value_template: '{% if states.automation.movement_alert.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.movement_alert.attributes.last_triggered)) > 1800 }}  {% else %}  true {% endif %}'
  action:
   - service: homeassistant.turn_on
     entity_id: script.alert

- alias: "movement1"
  trigger:
    - platform: state
      entity_id: switch.movement1
      state: 'on'
  action:
    - service: script.turn_off
      entity_id: script.timed_movement1_1min_off
    - service: script.turn_on
      entity_id: script.timed_movement1_1min_off

- alias: "movement2"
  trigger:
    - platform: state
      entity_id: switch.movement2
      state: 'on'
  action:
    - service: script.turn_off
      entity_id: script.timed_movement2_1min_off
    - service: script.turn_on
      entity_id: script.timed_movement2_1min_off

- alias: "movement do"
  trigger:
    - platform: state
      entity_id: switch.movement_do
      state: 'on'
  action:
    - service: script.turn_off
      entity_id: script.timed_movement_do_1min_off
    - service: script.turn_on
      entity_id: script.timed_movement_do_1min_off

- alias: "Movement3"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {'entity_id': 'switch.movement3', 'state': 'unknown command (0x9da2da)'}
    - platform: state
      entity_id: switch.movement3
      state: 'on'
  action:
    - service: script.turn_off
      entity_id: script.timed_movement3_1min_off
    - service: script.turn_on
      entity_id: script.timed_movement3_1min_off

- alias: "Movement soverom"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'unknown command (0xdb153a)', 'entity_id': 'switch.movement_soverom'}
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'unknown command (0x94597a)', 'entity_id': 'switch.movement_soverom_seng'}
  action:
    - service: script.turn_off
      entity_id: script.timed_movement_soverom_1min_off
    - service: script.turn_on
      entity_id: script.timed_movement_soverom_1min_off

- alias: "Movement kjokken"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'unknown command (0x55997a)', 'entity_id': 'switch.movement_kjokken'}
  action:
    - service: script.turn_off
      entity_id: script.timed_movement_kjokken_1min_off
    - service: script.turn_on
      entity_id: script.timed_movement_kjokken_1min_off

- alias: "Movement stue"
  trigger:
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'unknown command (0x2ebf8a)', 'entity_id': 'switch.movement_stue'}
  action:
    - service: script.turn_off
      entity_id: script.timed_movement_stue_1min_off
    - service: script.turn_on
      entity_id: script.timed_movement_stue_1min_off


- alias: "dor on"
  trigger:
   - platform: state
     entity_id: switch.door
     to: 'on'
   - platform: state
     entity_id: binary_sensor.door_window_sensor_158d000110ab73
     to: 'on'
  action:
   - service: homeassistant.turn_on
     entity_id: input_boolean.door

- alias: "dor off"
  trigger:
   - platform: state
     entity_id: switch.door
     to: 'off'
   - platform: state
     entity_id: binary_sensor.door_window_sensor_158d000110ab73
     to: 'off'
  action:
   - service: homeassistant.turn_off
     entity_id: input_boolean.door

- alias: "dor bad on"
  trigger:
   - platform: state
     entity_id: switch.door_bad
     to: 'on'
   - platform: state
     entity_id: binary_sensor.door_window_sensor_158d000110ab92
     to: 'on'
  action:
   - service: homeassistant.turn_on
     entity_id: input_boolean.door_bad

- alias: "dor bad off"
  trigger:
   - platform: state
     entity_id: switch.door_bad
     to: 'off'
   - platform: state
     entity_id: binary_sensor.door_window_sensor_158d000110ab92
     to: 'off'
  action:
   - service: homeassistant.turn_off
     entity_id: input_boolean.door_bad


- alias: "dor do on"
  trigger:
   - platform: state
     entity_id: switch.door_do
     to: 'on'
   - platform: state
     entity_id: binary_sensor.door_window_sensor_158d00012d8d86
     to: 'on'
  action:
   - service: homeassistant.turn_on
     entity_id: input_boolean.door_do

- alias: "dor do off"
  trigger:
   - platform: state
     entity_id: switch.door_do
     to: 'off'
   - platform: state
     entity_id: binary_sensor.door_window_sensor_158d00012d8d86
     to: 'off'
  action:
   - service: homeassistant.turn_off
     entity_id: input_boolean.door_do


- alias: "dor soverom on"
  trigger:
   - platform: state
     entity_id: switch.door_bedroom
     to: 'on'
   - platform: state
     entity_id: binary_sensor.door_window_sensor_158d00010dc700
     to: 'on'
  action:
   - service: homeassistant.turn_on
     entity_id: input_boolean.door_soverom

- alias: "dor soverom off"
  trigger:
   - platform: state
     entity_id: switch.door_bedroom
     to: 'off'
   - platform: state
     entity_id: binary_sensor.door_window_sensor_158d00010dc700
     to: 'off'
  action:
   - service: homeassistant.turn_off
     entity_id: input_boolean.door_soverom


- alias: "Close do dor"
  trigger:
    platform: state
    entity_id: switch.door_do
    to: 'on'
    for:
      minutes: 50
  action:
      service: homeassistant.turn_off
      entity_id: 
      - switch.door_do

- alias: "Tine home"
  trigger:
    - platform: state
      entity_id: device_tracker.tine
      to: 'home'
  action:
      service: homeassistant.turn_off
      entity_id: input_boolean.nattlys

#- alias: "Mobillader on"
#  trigger:
#    - platform: numeric_state
#      entity_id: sensor.phone_battery
#      below: 91
#    - platform: numeric_state
#      entity_id: sensor.phone_battery
#      below: 40
#    - platform: event
#      event_type: button_pressed
#      event_data: {'state': 'unknown command (0x545503)', 'entity_id': 'switch.leggetid'}
#    - platform: numeric_state
#      entity_id: sensor.relative_alarm_time
#      below: 25
#      above: 15
#  condition:
#    - condition: state
#      entity_id: group.tracker
#      state: 'home'
#  action:
#      service: homeassistant.turn_on
#      entity_id: switch.mobillader

#- alias: "Mobillader off"
#  trigger:
#    - platform: numeric_state
#      entity_id: sensor.phone_battery
#      above: 99
#    - platform: state
#      entity_id: group.tracker
#      to: 'not_home'
#      for:
#        hours: 2
#  action:
#      service: homeassistant.turn_off
#      entity_id: switch.mobillader
      
# - alias: "Media player paused/stopped"
#   trigger:
#     - platform: state
#       entity_id: media_player.chromecast1877
#       from: 'playing'
#   condition:
#     - condition: state
#       entity_id: light.Lys_stue
#       state: 'on'
#     - condition: state
#       entity_id: light.Lys_TV
#       state: 'on'
#     - condition: template
#       value_template: >
#         {% if is_state('media_player.chromecast1877', 'unknown') %}
#           false
#         {% else %}
#           true
#         {% endif %}
#   action:
#       service: scene.turn_on
#       entity_id: scene.Normal_lys
#
# - alias: "Media player playing"
#   trigger:
#     - platform: state
#       entity_id: media_player.chromecast1877
#       to: 'playing'
#   condition:
#     - condition: state
#       entity_id: light.Lys_stue
#       state: 'on'
#     - condition: state
#       entity_id: light.Lys_TV
#       state: 'on'
#   action:
#       service: scene.turn_on
#       entity_id: scene.Dempet_lys
#
- alias: "stovsuger"
  trigger:
    platform: event
    event_type: button_pressed
    event_data: {'entity_id': 'switch.stovsuger_running', 'state': 'unknown command (0xd55555)'}
  action:
    - service: script.turn_off
      entity_id: script.stovsuger_running
    - service: script.turn_on
      entity_id: script.stovsuger_running

- alias: "Start Stovsuger"
  trigger:
    - platform: state
      entity_id: group.tracker
      state: 'not_home'
      for:
        hours: 1
    - platform: state
      entity_id: script.timed_movement
      state: 'off'
      for:
        hours: 1
    - platform: time
      after: '12:10:00'
  condition:
    - condition: state
      entity_id: switch.stovsuger
      state: 'off'
    - condition: state
      entity_id: group.tracker
      state: 'not_home'
    - condition: state
      entity_id: script.timed_movement
      state: 'off'
    - condition: time
      after: '09:00:00'
      before: '21:00:00'
    - condition: state
      entity_id: script.stovsuger_running
      state: 'off'
    - condition: template
      value_template: '{% if states.automation.stovsuger.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.stovsuger.attributes.last_triggered)) > 3600*12 }}  {% else %}true{% endif %}'
  action:
    - service: homeassistant.turn_on
      entity_id: switch.stovsuger

- alias: "Reset Stovsuger switch"
  trigger:
   - platform: state
     entity_id: script.stovsuger_running
     state: 'off'
     for:
       minutes: 20
  condition:
    - condition: state
      entity_id: switch.stovsuger
      state: 'on'
  action:
   - service: homeassistant.turn_off
     entity_id: switch.stovsuger

- alias: "Stop Stovsuger"
  trigger:
   - platform: event
     event_type: button_pressed
     event_data: {'entity_id': 'switch.stovsuger_running', 'state': 'unknown command (0xd55555)'}
  condition:
   - condition: template
     value_template: '{% if states.automation.stop_stovsuger.attributes.last_triggered %} {{(as_timestamp(now())-as_timestamp(states.automation.stop_stovsuger.attributes.last_triggered)) > 30}} {% else %}true{% endif %}'
   - condition: or
     conditions:
     - condition: state
       entity_id: group.tracker
       state: 'home'
     - condition: state
       entity_id: script.timed_movement
       state: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id: switch.stovsuger

- alias: "Offline device"
  trigger:
    platform: time
    minutes: '/15'
    seconds: 12
  condition:
   - condition: template
     value_template: '{% if states.automation.offline_device.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.offline_device.attributes.last_triggered)) > 24*3600 }}  {% else %}  true {% endif %}'
   - condition: template
     value_template: >  
       {% for state in states.device_tracker if state.entity_id in states.group.hw_devices.attributes.entity_id and state.state == 'not_home' %}
       {% if loop.first %}
       {{true}}
       {% endif %}
       {% else %}
       {{false}}
       {% endfor %}
  action:
    service: notify.pushbullet
    data:
      title: "Offline device"
      target: "device/daniel_telefon"
      message: >
        Device is offline: 
        {% for state in states.device_tracker if state.entity_id in states.group.hw_devices.attributes.entity_id  %}
        {%- if state.state == 'not_home'-%} {{ state.name | lower }}, {% endif -%}
        {% endfor %}

- alias: "Ny ip"
  trigger:
   - platform: state
     entity_id: sensor.external_ip
  condition:
   - condition: template
     value_template: '{% if states.automation.ha_started.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.ha_started.attributes.last_triggered)) > 5*60 }}  {% else %}false{% endif %}'
   - condition: template
     value_template: '{{ states.sensor.external_ip.state != "unknown" }}'
  action:
    service: notify.pushbullet
    data:
      title: "Ny ip"
      target: "device/daniel_telefon"
      message: Home IP Address was changed. The new home IP address is "{{ states('sensor.external_ip') }}"

#- alias: "Offline sensor"
#  trigger:
#    platform: time
#    minutes: '/48'
#    seconds: 10
#  condition:
#   - condition: template
#     value_template: '{% if states.automation.offline_sensor.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.offline_sensor.attributes.last_triggered)) > 60*60*24 }}  {% else %}false{% endif %}'  
#   - condition: template
#     value_template: '{% if states.automation.ha_started.attributes.last_triggered  %} {{(as_timestamp(now())-as_timestamp(states.automation.ha_started.attributes.last_triggered)) > 60*60*10 }}  {% else %}false{% endif %}'
#   - condition: template
#     value_template: '{% if states.sensor.no_updates.state == False  %} false {% else %} true {% endif %}'
#  action:
#    service: notify.pushbullet
#    data:
#      title: "Offline sensor"
#      target: "device/daniel_telefon"
#      message: >
#        Sensor is offline: 
#        {{states("sensor.no_updates")}}
  
  
