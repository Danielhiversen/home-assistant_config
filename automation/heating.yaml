- alias: "Auto heating on"
  trigger:
    - platform: state
      entity_id: group.tracker
      to: 'home'
    - platform: state
      entity_id: script.timed_movement
      to: 'on'
    - platform: numeric_state
      entity_id: sensor.relative_alarm_time
      below: 30
    - platform: numeric_state
      entity_id: proximity.home
      below: 1300
    - platform: numeric_state
      entity_id: proximity.home
      below: 100
  condition:
    - condition: template
      value_template: '{{(as_timestamp(now())-as_timestamp(states.sensor.target_temp_stue.last_updated)) > 900}}'
    - condition: template
      value_template: '{{float(states.input_number.auto_temp.state) > float(states.climate.termostat_stue.attributes.temperature)}}'
    - condition: state
      entity_id: input_boolean.auto_heat
      state: 'on'

    - condition: or
      conditions:
      - condition: template
        value_template: '{{ trigger.entity_id !=  states.sensor.relative_alarm_time.entity_id}}'
      - condition: state
        entity_id: automation.wake_me_up
        state: 'on'

    - condition: or
      conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == states.sensor.relative_alarm_time.entity_id}}'
      - condition: time
        after: '07:00:00'
        before: '22:00:00'

    - condition: or
      conditions:
      - condition: template
        value_template: '{{trigger.entity_id !=  states.proximity.home.entity_id}}'
      - condition: and
        conditions:
        - condition: template
          value_template: '{{states.proximity.home.attributes.dir_of_travel == "towards"}}'
        - condition: or
          conditions:
          - condition: template
            value_template: '{{states.device_tracker.daniel.attributes.activity | lower != "in_vehicle"}}'
          - condition: template
            value_template: '{{states.proximity.home.state | float < 100}}'
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: "climate.termostat_stue"
        temperature: '{{ float(states.input_number.auto_temp.state) }}'


- alias: "Auto heating off"
  trigger:
    - platform: state
      entity_id: group.tracker
      to: 'not_home'
      for:
        minutes: 4
    - platform: state
      entity_id: script.timed_movement
      to: 'off'
      for:
        minutes: 4
    - platform: state
      entity_id: script.timed_movement
      to: 'off'
      for:
        minutes: 60
    - platform: state
      entity_id: script.borte
      to: 'on'
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'unknown command (0x545503)', 'entity_id': 'switch.leggetid'}
    - platform: event
      event_type: button_pressed
      event_data: {'state': 'group on', 'entity_id': 'switch.main'}
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d00013ed144
        click_type: double
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d00013ed144
        click_type: single
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_158d00012ac03c
        click_type: single
  condition:
    - condition: template
      value_template: '{{float(states.input_number.auto_temp_low.state) < float(states.climate.termostat_stue.attributes.temperature)}}'
    - condition: state
      entity_id: input_boolean.auto_heat
      state: 'on'

    - condition: or
      conditions:
      - condition: template
        value_template: '{{trigger.platform != "state"}}'
      - condition: and
        conditions:
        - condition: template
          value_template: '{{(as_timestamp(now())-as_timestamp(states.sensor.target_temp_stue.last_updated)) > 900}}'
        - condition: or
          conditions:
          - condition: time
            after: '21:30:00'
            before: '07:00:00'
          - condition: state
            entity_id: group.tracker
            state: 'not_home'
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: "climate.termostat_stue"
        temperature: '{{ float(states.input_number.auto_temp_low.state) }}'

- alias: "Auto heating enabled"
  trigger:
    platform: state
    entity_id: input_number.auto_temp, input_number.auto_temp_low 
  action:
  - service: homeassistant.turn_on
    data: 
      entity_id: input_boolean.auto_heat

- alias: "Stue too warm"
  trigger:
   - platform: time
     # This will match every 15 minutes
     minutes: '/15'
     seconds: 40
  condition:
   - condition: numeric_state
     entity_id: climate.termostat_stue
     value_template: '{{ state.attributes.current_temperature - state.attributes.temperature}}'
     above: 0.5
  action:
      service: homeassistant.turn_off
      entity_id: switch.ovn_stue

- alias: "Soverom too warm"
  trigger:
   - platform: time
     # This will match every 15 minutes
     minutes: '/15'
     seconds: 31
  condition:
   - condition: numeric_state
     entity_id: climate.soverom
     value_template: '{{ state.attributes.current_temperature - state.attributes.temperature}}'
     above: 0.5
  action:
      service: homeassistant.turn_off
      entity_id: switch.ovn_soverom

- alias: "Stue too cold"
  trigger:
   - platform: time
     # This will match every 15 minutes
     minutes: '/15'
     seconds: 48
  condition:
   - condition: numeric_state
     entity_id: climate.termostat_stue
     value_template: '{{ state.attributes.temperature - state.attributes.current_temperature}}'
     above: 0.5
  action:
      service: homeassistant.turn_on
      entity_id: switch.ovn_stue

- alias: "Soverom too cold"
  trigger:
   - platform: time
     # This will match every 15 minutes
     minutes: '/15'
     seconds: 57
  condition:
   - condition: numeric_state
     entity_id: climate.soverom
     value_template: '{{ state.attributes.temperature - state.attributes.current_temperature}}'
     above: 0.5
  action:
      service: homeassistant.turn_on
      entity_id: switch.ovn_soverom

